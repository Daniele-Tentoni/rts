name: Test Python

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  test:
    name: Test using Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3.0.11
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/test.yml') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install

      - name: Run pytest with coverage
        env:
          SDL_VIDEODRIVER: "dummy"
          SDL_AUDIODRIVER: "disk"
        run: poetry run python -m pytest --cov=rts --cov-report=xml --durations=3 tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
