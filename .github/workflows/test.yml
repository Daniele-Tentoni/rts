name: Test Python

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  test:
    name: Test using Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4.0.0
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run pytest with coverage
        env:
          SDL_VIDEODRIVER: "dummy"
          SDL_AUDIODRIVER: "disk"
        run: poetry run python -m pytest --cov=rts --cov-report=xml --durations=3 tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.0-beta.3
        with:
          files: ./coverage.xml
          flags: unittests
